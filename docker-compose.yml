

services:
  db:
    image: postgres:16-alpine # 使用輕量級的 PostgreSQL 映像
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data # 將資料儲存到 volume，防止容器刪除時資料丟失
    ports:
      - "5432:5432" # 將容器的 5432 埠映射到主機的 5432 埠

  web:
    build: .
    restart: always
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      FLASK_DEBUG: 1
    ports:
      - "5000:5000"
    depends_on:
      - db
    command: >
      sh -c "python -c 'from app import init_db; init_db()' && 
             gunicorn app:app --worker-class gthread --workers 1 --threads 4 --bind 0.0.0.0:5000 --log-level info --access-logfile - --error-logfile -"

  scheduler: # <--- 新增的服務
    build: . # 使用相同的 Dockerfile
    restart: always
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      - db
    # 啟動獨立的 scheduler_worker.py 腳本
    command: python scheduler_worker.py

volumes:
  pgdata: